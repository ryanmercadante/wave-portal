/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WavePortal, WavePortalInterface } from "../WavePortal";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "NewWave",
    type: "event",
  },
  {
    inputs: [],
    name: "getAllWaves",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "waver",
            type: "address",
          },
          {
            internalType: "string",
            name: "message",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct WavePortal.Wave[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalWaves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "wave",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526200004f6040518060400160405280600581526020017f57617665790000000000000000000000000000000000000000000000000000008152506200005560201b6200042d1760201c565b620001e9565b620000f5816040516024016200006c919062000162565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050620000f860201b60201c565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60006200012e8262000186565b6200013a818562000191565b93506200014c818560208601620001a2565b6200015781620001d8565b840191505092915050565b600060208201905081810360008301526200017e818462000121565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620001c2578082015181840152602081019050620001a5565b83811115620001d2576000848401525b50505050565b6000601f19601f8301169050919050565b610c2980620001f96000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063449d46c0146100465780639a2cdc0814610062578063bd43a90814610080575b600080fd5b610060600480360381019061005b91906105fa565b61009e565b005b61006a6102d3565b6040516100779190610932565b60405180910390f35b6100886102dc565b60405161009591906108ae565b60405180910390f35b60016000808282546100b09190610a4f565b92505081905550600160405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815260200142815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906101769291906104ef565b506040820151816002015550503373ffffffffffffffffffffffffffffffffffffffff167f5f7e16dc676677766a70e9c5628aa6c54ddb8b6e5188e2ae1e1f17f1ffbea71642836040516101cb92919061094d565b60405180910390a2600066038d7ea4c68000905047811115610222576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610219906108f2565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff168260405161024890610899565b60006040518083038185875af1925050503d8060008114610285576040519150601f19603f3d011682016040523d82523d6000602084013e61028a565b606091505b50509050806102ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c590610912565b60405180910390fd5b505050565b60008054905090565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561042457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461038990610b23565b80601f01602080910402602001604051908101604052809291908181526020018280546103b590610b23565b80156104025780601f106103d757610100808354040283529160200191610402565b820191906000526020600020905b8154815290600101906020018083116103e557829003601f168201915b5050505050815260200160028201548152505081526020019060010190610300565b50505050905090565b6104c38160405160240161044191906108d0565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506104c6565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280546104fb90610b23565b90600052602060002090601f01602090048101928261051d5760008555610564565b82601f1061053657805160ff1916838001178555610564565b82800160010185558215610564579182015b82811115610563578251825591602001919060010190610548565b5b5090506105719190610575565b5090565b5b8082111561058e576000816000905550600101610576565b5090565b60006105a56105a0846109ae565b61097d565b9050828152602081018484840111156105bd57600080fd5b6105c8848285610ae1565b509392505050565b600082601f8301126105e157600080fd5b81356105f1848260208601610592565b91505092915050565b60006020828403121561060c57600080fd5b600082013567ffffffffffffffff81111561062657600080fd5b610632848285016105d0565b91505092915050565b6000610647838361082b565b905092915050565b61065881610aa5565b82525050565b6000610669826109ee565b6106738185610a11565b935083602082028501610685856109de565b8060005b858110156106c157848403895281516106a2858261063b565b94506106ad83610a04565b925060208a01995050600181019050610689565b50829750879550505050505092915050565b60006106de826109f9565b6106e88185610a2d565b93506106f8818560208601610af0565b61070181610be2565b840191505092915050565b6000610717826109f9565b6107218185610a3e565b9350610731818560208601610af0565b61073a81610be2565b840191505092915050565b6000610752603483610a3e565b91507f547279696e6720746f207769746864726177206d6f7265206d6f6e657920746860008301527f616e2074686520636f6e7472616374206861732e0000000000000000000000006020830152604082019050919050565b60006107b8602783610a3e565b91507f4661696c656420746f207769746864726177206d6f6e65792066726f6d20636f60008301527f6e74726163742e000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061081e600083610a22565b9150600082019050919050565b6000606083016000830151610843600086018261064f565b506020830151848203602086015261085b82826106d3565b9150506040830151610870604086018261087b565b508091505092915050565b61088481610ad7565b82525050565b61089381610ad7565b82525050565b60006108a482610811565b9150819050919050565b600060208201905081810360008301526108c8818461065e565b905092915050565b600060208201905081810360008301526108ea818461070c565b905092915050565b6000602082019050818103600083015261090b81610745565b9050919050565b6000602082019050818103600083015261092b816107ab565b9050919050565b6000602082019050610947600083018461088a565b92915050565b6000604082019050610962600083018561088a565b8181036020830152610974818461070c565b90509392505050565b6000604051905081810181811067ffffffffffffffff821117156109a4576109a3610bb3565b5b8060405250919050565b600067ffffffffffffffff8211156109c9576109c8610bb3565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610a5a82610ad7565b9150610a6583610ad7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a9a57610a99610b55565b5b828201905092915050565b6000610ab082610ab7565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610b0e578082015181840152602081019050610af3565b83811115610b1d576000848401525b50505050565b60006002820490506001821680610b3b57607f821691505b60208210811415610b4f57610b4e610b84565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fea264697066735822122057eda84258ec7d2b3944626e0b2fba00254467b42d3ea74de265dc846f40b7e464736f6c63430008000033";

export class WavePortal__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<WavePortal> {
    return super.deploy(overrides || {}) as Promise<WavePortal>;
  }
  getDeployTransaction(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WavePortal {
    return super.attach(address) as WavePortal;
  }
  connect(signer: Signer): WavePortal__factory {
    return super.connect(signer) as WavePortal__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WavePortalInterface {
    return new utils.Interface(_abi) as WavePortalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WavePortal {
    return new Contract(address, _abi, signerOrProvider) as WavePortal;
  }
}
