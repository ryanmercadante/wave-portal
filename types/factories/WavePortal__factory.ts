/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WavePortal, WavePortalInterface } from "../WavePortal";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "NewWave",
    type: "event",
  },
  {
    inputs: [],
    name: "getAllWaves",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "waver",
            type: "address",
          },
          {
            internalType: "string",
            name: "message",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct WavePortal.Wave[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalWaves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastWavedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "wave",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526200004f6040518060400160405280600581526020017f57617665790000000000000000000000000000000000000000000000000000008152506200005560201b6200060a1760201c565b620001e9565b620000f5816040516024016200006c919062000162565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050620000f860201b60201c565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60006200012e8262000186565b6200013a818562000191565b93506200014c818560208601620001a2565b6200015781620001d8565b840191505092915050565b600060208201905081810360008301526200017e818462000121565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620001c2578082015181840152602081019050620001a5565b83811115620001d2576000848401525b50505050565b6000601f19601f8301169050919050565b6110c280620001f96000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063449d46c0146100515780639a2cdc081461006d578063a42a46631461008b578063bd43a908146100bb575b600080fd5b61006b6004803603810190610066919061094d565b6100d9565b005b610075610498565b6040516100829190610d54565b60405180910390f35b6100a560048036038101906100a09190610924565b6104a1565b6040516100b29190610d54565b60405180910390f35b6100c36104b9565b6040516100d09190610c50565b60405180910390f35b42603c600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546101269190610e71565b10610166576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015d90610cf4565b60405180910390fd5b42600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060016000808282546101bc9190610e71565b92505081905550600360405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815260200142815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610282929190610804565b506040820151816002015550506000606460015442446102a29190610e71565b6102ac9190610e71565b6102b69190610f77565b90506102f76040518060400160405280601b81526020017f52616e646f6d206e756d6265722067656e6572617465643a2025730000000000815250826106a3565b806001819055506032811015610444576103466040518060400160405280600781526020017f257320776f6e21000000000000000000000000000000000000000000000000008152503361073f565b600066038d7ea4c68000905047811115610395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038c90610d14565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16826040516103bb90610c3b565b60006040518083038185875af1925050503d80600081146103f8576040519150601f19603f3d011682016040523d82523d6000602084013e6103fd565b606091505b5050905080610441576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043890610d34565b60405180910390fd5b50505b3373ffffffffffffffffffffffffffffffffffffffff167f5f7e16dc676677766a70e9c5628aa6c54ddb8b6e5188e2ae1e1f17f1ffbea716428460405161048c929190610d6f565b60405180910390a25050565b60008054905090565b60026020528060005260406000206000915090505481565b60606003805480602002602001604051908101604052809291908181526020016000905b8282101561060157838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461056690610f45565b80601f016020809104026020016040519081016040528092919081815260200182805461059290610f45565b80156105df5780601f106105b4576101008083540402835291602001916105df565b820191906000526020600020905b8154815290600101906020018083116105c257829003601f168201915b50505050508152602001600282015481525050815260200190600101906104dd565b50505050905090565b6106a08160405160240161061e9190610c72565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506107db565b50565b61073b82826040516024016106b9929190610cc4565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506107db565b5050565b6107d78282604051602401610755929190610c94565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506107db565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b82805461081090610f45565b90600052602060002090601f0160209004810192826108325760008555610879565b82601f1061084b57805160ff1916838001178555610879565b82800160010185558215610879579182015b8281111561087857825182559160200191906001019061085d565b5b509050610886919061088a565b5090565b5b808211156108a357600081600090555060010161088b565b5090565b60006108ba6108b584610dd0565b610d9f565b9050828152602081018484840111156108d257600080fd5b6108dd848285610f03565b509392505050565b6000813590506108f481611075565b92915050565b600082601f83011261090b57600080fd5b813561091b8482602086016108a7565b91505092915050565b60006020828403121561093657600080fd5b6000610944848285016108e5565b91505092915050565b60006020828403121561095f57600080fd5b600082013567ffffffffffffffff81111561097957600080fd5b610985848285016108fa565b91505092915050565b600061099a8383610bcd565b905092915050565b6109ab81610ec7565b82525050565b6109ba81610ec7565b82525050565b60006109cb82610e10565b6109d58185610e33565b9350836020820285016109e785610e00565b8060005b85811015610a235784840389528151610a04858261098e565b9450610a0f83610e26565b925060208a019950506001810190506109eb565b50829750879550505050505092915050565b6000610a4082610e1b565b610a4a8185610e4f565b9350610a5a818560208601610f12565b610a6381611064565b840191505092915050565b6000610a7982610e1b565b610a838185610e60565b9350610a93818560208601610f12565b610a9c81611064565b840191505092915050565b6000610ab4600783610e60565b91507f5761697420316d000000000000000000000000000000000000000000000000006000830152602082019050919050565b6000610af4603483610e60565b91507f547279696e6720746f207769746864726177206d6f7265206d6f6e657920746860008301527f616e2074686520636f6e7472616374206861732e0000000000000000000000006020830152604082019050919050565b6000610b5a602783610e60565b91507f4661696c656420746f207769746864726177206d6f6e65792066726f6d20636f60008301527f6e74726163742e000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610bc0600083610e44565b9150600082019050919050565b6000606083016000830151610be560008601826109a2565b5060208301518482036020860152610bfd8282610a35565b9150506040830151610c126040860182610c1d565b508091505092915050565b610c2681610ef9565b82525050565b610c3581610ef9565b82525050565b6000610c4682610bb3565b9150819050919050565b60006020820190508181036000830152610c6a81846109c0565b905092915050565b60006020820190508181036000830152610c8c8184610a6e565b905092915050565b60006040820190508181036000830152610cae8185610a6e565b9050610cbd60208301846109b1565b9392505050565b60006040820190508181036000830152610cde8185610a6e565b9050610ced6020830184610c2c565b9392505050565b60006020820190508181036000830152610d0d81610aa7565b9050919050565b60006020820190508181036000830152610d2d81610ae7565b9050919050565b60006020820190508181036000830152610d4d81610b4d565b9050919050565b6000602082019050610d696000830184610c2c565b92915050565b6000604082019050610d846000830185610c2c565b8181036020830152610d968184610a6e565b90509392505050565b6000604051905081810181811067ffffffffffffffff82111715610dc657610dc5611035565b5b8060405250919050565b600067ffffffffffffffff821115610deb57610dea611035565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610e7c82610ef9565b9150610e8783610ef9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ebc57610ebb610fa8565b5b828201905092915050565b6000610ed282610ed9565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610f30578082015181840152602081019050610f15565b83811115610f3f576000848401525b50505050565b60006002820490506001821680610f5d57607f821691505b60208210811415610f7157610f70611006565b5b50919050565b6000610f8282610ef9565b9150610f8d83610ef9565b925082610f9d57610f9c610fd7565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61107e81610ec7565b811461108957600080fd5b5056fea2646970667358221220465834f8d472725e7c3921666c4dfde916beaf83ba4bf82a478e5ffc2c42522564736f6c63430008000033";

export class WavePortal__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<WavePortal> {
    return super.deploy(overrides || {}) as Promise<WavePortal>;
  }
  getDeployTransaction(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WavePortal {
    return super.attach(address) as WavePortal;
  }
  connect(signer: Signer): WavePortal__factory {
    return super.connect(signer) as WavePortal__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WavePortalInterface {
    return new utils.Interface(_abi) as WavePortalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WavePortal {
    return new Contract(address, _abi, signerOrProvider) as WavePortal;
  }
}
